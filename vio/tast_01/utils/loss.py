import torch
inv_t = 0.02 # t 参数的倒数

# 5 dim descriptor
desc0 = torch.tensor([[0.1, 0.2, 0.3, 0.4, 0.5]])
desc0 = desc0 / desc0.norm(p=2, dim=1, keepdim=True)
# 1 x 5 x 5 x 5 随机生成的描述图
desc1_map = torch.tensor([[[[ 0.1189, -0.7887, -1.1298,  1.6842, -0.2871],
          [ 0.2642,  0.5358,  0.6128, -0.4476, -0.0888],
          [-0.4345, -1.0295, -1.4958, -1.6138, -0.0429],
          [-1.0154,  1.1274, -0.5780, -0.9611,  0.3320],
          [-0.1570,  1.8808, -0.4679, -0.0226, -1.5448]],
         [[-0.7003, -1.5082,  2.5751, -0.8318, -1.1999],
          [-1.0316,  1.0143, -1.1442,  0.0097, -1.4739],
          [-0.0492, -0.8297, -0.6927,  0.2584,  1.3529],
          [-0.2195,  0.5814, -1.4415, -0.0062,  0.8498],
          [-0.7586,  0.6783, -0.0044, -0.4051, -0.5498]],
         [[ 1.1119,  0.1713,  0.0373,  0.5570, -0.2401],
          [ 0.6779, -0.1382,  0.4148, -0.1374,  0.7375],
          [-0.4922, -1.4828,  0.0278,  0.7666,  0.0398],
          [ 0.8891,  1.6037, -0.1486,  0.6023, -1.1868],
          [ 0.6333, -0.1377,  2.3345,  0.0148, -1.0871]],
         [[-0.5167, -0.7783, -2.5340, -1.3265, -0.7906],
          [ 0.1611, -0.8836,  0.0957, -0.4783,  1.8164],
          [-0.0492,  0.8635, -0.0421, -1.0579,  0.7345],
          [ 0.1105, -0.9689,  0.6447,  1.2047,  2.7365],
          [-0.0640,  2.0645, -0.6100,  0.7787,  1.8188]],
         [[ 0.2105,  0.9281, -0.1658,  0.3517, -0.8588],
          [-0.4303,  2.1325,  0.5604,  0.7279, -0.3709],
          [ 1.0387,  2.4515,  1.1584, -0.6140,  1.1911],
          [-1.4164,  0.1545, -0.0496,  1.1442,  0.2950],
          [-1.2162,  0.3227,  0.2349,  0.5450, -1.0300]]]])
# 假设投影位置为图像中心
kps01 = torch.tensor([[[0.0, 0.0]]])

desc1_map = desc1_map / desc1_map.norm(p=2, dim=1, keepdim=True)

# 计算相似度图
similarity_map = torch.einsum('nd,dhw->nhw', desc0, desc1_map[0])

# @TODO: 计算损失,完全按照公式计算

loss = -C.log()  # \widetilde{C}

print(loss)

# 参考结果 tensor([3.2174])


